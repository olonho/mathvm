function double sqrt(double x) native 'sqrt';

function int int(double d) {
    return 0 + d;
}

function double double(int i) {
    return 0.0 + i;
}

function int leastFactor(int n) {
  if (n == 0) {
      return 0;  
  }
  if (n == 1) { 
      return 1;
  }
  if (n % 2 == 0) {
      return 2;
  }
  if (n % 3 == 0) {
      return 3;
  }
  if (n % 5 == 0) {
      return 5;  
  }
  int m;
  m = int(sqrt(double(n)));
  int i;
  i = 7;
  while (i<=m) {
      if (n % i==0) {
          return i;
      }
      if (n%(i+4)==0) {
          return i+4;
      }
      if (n%(i+6)==0)  {
          return i+6;
      }
      if (n%(i+10)==0) {
          return i+10;
      }
      if (n%(i+12)==0) {
          return i+12;
      }
      if (n%(i+16)==0) {
          return i+16;
      }
      if (n%(i+22)==0) {
          return i+22;
      }
      if (n%(i+24)==0) {
          return i+24;
      }
      i += 30;
  }
  return n;
}

function void factorize(int n, int printResult)  {
    int least;
    least = n;
    if (printResult != 0) {
        print(n, ' = 1');
    }
    while (n > 1) {
        least = leastFactor(n);
        if (n % least != 0) {
            print('Bug!\n');
        }
        if (printResult != 0) {
            print(' * ', least);
        }
        n = n / least;
    }
    if (printResult != 0) {
        print('\n');
    }
}

int n;
for (n in 10000000..10100000) {
    factorize(n, 0);
}
